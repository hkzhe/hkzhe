function getDocHeight() {
	var n = document;
	return Math.max(Math.max(n.body.scrollHeight, n.documentElement.scrollHeight), Math.max(n.body.offsetHeight, n.documentElement.offsetHeight), Math.max(n.body.clientHeight, n.documentElement.clientHeight))
}
var Grid = function(n, t, i) {
	this.array = null,
	this.size = n,
	this.GridWidth = t,
	this.BoxWidth = i,
	this.container = null,
	this.init = function() {
		this.array = [];
		for (var n = 0; n < this.size; n++) this.array.push({
			height: 0,
			elements: []
		})
	},
	this.findMinHeightCol = function() {
		for (var t = this.array[0].height, i = 0, n = 0; n < this.array.length; n++) this.array[n].height < t && (t = this.array[n].height, i = n);
		return i
	},
	this.getMaxHeight = function() {
		for (var t = 0,
		n = 0; n < this.array.length; n++) this.array[n].height > t && (t = this.array[n].height);
		return t
	},
	this.adjustColumn = function(n, t, i) {
		var r = this.array[n].elements,
		u,
		f;
		if (this.array[n].height += i, r.length > t) for (u = t; u < r.length; u++) f = parseInt(r[u].css("top"), 10),
		r[u].css("top", f + i);
		this.updateContainerHeight()
	},
	this.updateContainerHeight = function() {
		this.container.css("height", this.getMaxHeight())
	}
},
placeBoxes = function(n, t) {
	n && n.BoxWidth && ($("li.box").each(function() {
		var t = n.findMinHeightCol(),
		i = {
			left: t * (n.BoxWidth + 25),
			top: n.array[t].height
		};
		$(this).css("left", i.left),
		$(this).css("top", i.top),
		n.array[t].height += $(this).height() + 25,
		n.array[t].elements.push($(this)),
		$(this).attr("data-col", t),
		$(this).attr("data-row", n.array[t].elements.length),
		$("#boxesLoaderCon").hide(),
		$(this).removeClass("unplaced").addClass("placed"),
		fixPlaceholder($(this).find(".commentInput")),
		n.updateContainerHeight()
	}), $("textarea").keyup(function(i) {
		var u, f, e, r, o, s;
		if (i.keyCode === 13) return i.preventDefault(),
		u = $(this).val().trim(),
		u !== "" && $(this).parent().submit(),
		$(this).val(""),
		!1;
		f = $(this).height(),
		e = Math.ceil($(this).val().length / t),
		$(this).attr("rows", Math.max(1, e)),
		r = $(this).height() - f,
		r && (o = $(this).parents("li.box").attr("data-col"), s = $(this).parents("li.box").attr("data-row"), n.adjustColumn(o, s, r), n.updateContainerHeight())
	}))
},
createNewGrid = function() {
	var r, f, e;
	$("textarea").unbind("keyup"),
	$(document).unbind("box-resize");
	var i = $(window).width(),
	u = 25,
	t = $("li.box").width(),
	n = null;
	if (t !== null && i !== null) return r = Math.floor(i / t),
	f = i % t,
	f / (r - 1) < u ? (n = new Grid(r - 1, i, t), f += t) : n = new Grid(r, i, t),
	n.init(),
	n.container = $("#activLis"),
	e = n.array.length * t + (n.array.length - 1) * u,
	$("#activLis , #titleBox").css("width", e),
	$(document).bind("box-resize",
	function(t, i) {
		n.adjustColumn(i.colNum, i.row, i.offset)
	}),
	n
},
scrollEnd = function() {
	var n = $("#pagingLoaderCon"),
	t = $(window).height() + $(window).scrollTop();
	t >= getDocHeight() - 800 ? ($(window).unbind("scroll"), n.show(), getMoreActivities()) : n.hide()
},
getMoreActivities = function() {
	var n = $("li.box").length,
	t = {
		start: n,
		howMany: 20
	};
	requestActivities(t)
},
requestActivities = function(n) {
	var t = $("#boxesCon").attr("data-method"),
	i = $("#boxesCon").attr("data-id"),
	r;
	i && (n.id = i),
	(t === undefined || t.trim() === "") && (t = "/ajax/gettemplates"),
	r = $("#boxesCon").attr("data-type"),
	r === "profile" && (n.userId = $("#boxesCon").attr("data-id"))/*,
	$.ajax({
		method: "POST",
		url: t,
		cache: !1,
		data: n
	}).done(function(n) {
		var t, i;
		n.length > 0 ? (t = $(n), $("#activLis").append(t), i = createNewGrid(), placeBoxes(i, 35), $("abbr.timeago").timeago(), $(window).scroll(scrollEnd)) : $("#boxesLoaderCon").is(":visible") && $("#boxesLoaderCon").html("<h1 style='text-align:center;'>" + $("#boxesCon").attr("data-message") + "<\/h1>")
	}).always(function() {
		$("#pagingLoaderCon").fadeOut(1e3)
	})*/
},
AddComment = function(n) {
	var r = $('[data-id="' + n.TemplateId + '"] .commentList'),
	i = $('[data-id="' + n.TemplateId + '"]'),
	u = $("#activityCommentTemplate").html(),
	t = $(Mustache.to_html(u, n)),
	f,
	e;
	t.find("abbr.timeago").timeago(),
	r.append(t),
	f = 10,
	e = {
		colNum: i.attr("data-col"),
		row: i.attr("data-row"),
		offset: t.height() + f
	},
	$(document).trigger("box-resize", [e])
},
RequestFailed = function(n) {
	switch (n.status) {
	case 403:
		$(".wantit, .doneit").removeClass("purple-active").removeClass("purple").addClass("green"),
		$(document).trigger("modal-popup");
		break;
	case 419:
		$("#dialog-login").dialog({
			resizable:
			!1,
			draggable: !1,
			modal: !0,
			buttons: {
				Refresh: function() {
					window.location.reload(),
					$(this).dialog("close")
				},
				Cancel: function() {
					$(this).dialog("close")
				}
			}
		})
	}
},
ToggleButton = function(n) {
	var t = $('[data-id="' + n.id + '"] .' + n.type + "");
	n.marked ? t.addClass("purple").addClass("purple-active").removeClass("green") : t.removeClass("purple-active").removeClass("purple").addClass("green")
};
$(document).ready(function() {
	var t = {},
	u, i, r, n;
	$("#location-search").length > 0 && (u = null, $("#location-search").autocomplete({
		minLength: 2,
		source: function(n, i) {
			var r = n.term,
			u = $(this.element),
			f = u.data("jqXHR");
			if (f && f.abort(), r in t) {
				i(t[r]);
				return
			}
			u.data("jqXHR", $.getJSON("/ajax/search", n).done(function(n) {
				u.removeData("jqXHR"),
				t[r] = n,
				i(n)
			}).fail(function() {}))
		},
		focus: function(n, t) {
			return $("#location-search").val(t.item.DisplayName),
			!1
		},
		select: function(n, t) {
			$("#location-search").val(t.item.DisplayName);
			var i = "";
			switch (t.item.ObjectTypeId) {
			case 1:
				i = "/activities/" + t.item.SlugName;
				break;
			case 2:
				i = "/users/" + t.item.SlugName;
				break;
			case 3:
				i = "/" + t.item.SlugName;
				break;
			case 4:
				i = "/" + t.item.SlugName
			}
			return window.location = i,
			!1
		}
	}).data("autocomplete")._renderItem = function(n, t) {
		var i = "/content/images/icon_location.png";
		switch (t.ObjectTypeId) {
		case 1:
			i = "/content/images/icon_activity2.png";
			break;
		case 2:
			i = "/content/images/icon_friends.png";
			break;
		case 3:
			i = "/content/images/icon_location.png";
			break;
		case 4:
			i = "/content/images/icon_country.png"
		}
		return $("<li>").data("item.autocomplete", t).append("<a style='display:block'> <img src='" + i + "'/>" + t.DisplayName + "<\/a>").appendTo(n)
	},
	$("#location-search").blur(function() {
		var t = $(this),
		n = $(this).data("jqXHR");
		n && n.abort(),
		t.removeData("jqXHR")
	})),
	i = createNewGrid(),
	r = 26,
	placeBoxes(i, r),
	requestActivities({
		start: 0,
		howMany: 20
	});
	$(document).on("click", ".doneit,.wantit",
	function() {
		$(this).toggleClass("purple").toggleClass("purple-active").toggleClass("green")
	});
	$(document).on("click", ".seemore",
	function() {
		var t = $(this),
		i,
		r;
		t.html("<img src='/content/images/loader-purple.gif' />"),
		i = "/ajax/getalltemplatecomments",
		r = {
			templateId: $(this).attr("data-templateId")
		},
		$.getJSON(i, r).done(function(n) {
			t.hide(),
			n.length > 0 && $(n).each(function() {
				AddComment(this)
			})
		})
	});
	n = window.location.search,
	console.log(n),
	(n.trim() !== "" || n !== undefined) && n.indexOf("ReturnUrl", 0) !== -1 && $(document).trigger("modal-popup")
})